replicate(n=10, expr =
{
x <- sample(1:6, 4, replace = T)
is.element(1,x)
})
replicate(n=10, expr =
{
x <- sample(1:6, 4, replace = T)
is.element(1,x)
})
replicate(n=10, expr =
{
x <- sample(1:36, 24, replace = T)
is.element(1,x)
})
replicate(n=10, expr =
{
x <- sample(1:36, 24, replace = T)
is.element(1,x)
})
SingleDieFourRollGame.10Kresults<- replicate(n=10000, expr =
{
x <- sample(1:6, 4, replace = T)
is.element(1,x)
})
SingleDieFourRollGame.10Kresults<- replicate(n=10000, expr =
{
x <- sample(1:6, 4, replace = T)
is.element(1,x)
})
TwoDieTwentyFourRollGame.10K <- resultsreplicate(n=10, expr =
{
x <- sample(1:36, 24, replace = T)
is.element(1,x)
})
TwoDieTwentyFourRollGame.10Kresults <- replicate(n=10, expr =
{
x <- sample(1:36, 24, replace = T)
is.element(1,x)
})
SingleDieFourRollGame.10Kresults
x <- SingleDieFourRollGame.10Kresults
sum(x == T)
sum(SingleDieFourRollGame.10Kresults == T)
TwoDieTwentyFourRollGame.10Kresults <- replicate(n=10000, expr =
{
x <- sample(1:36, 24, replace = T)
is.element(1,x)
})
sum(TwoDieTwentyFourRollGame.10Kresults == T)
TwoDieTwentyFourRollGame.10Kresults <- replicate(n=10000, expr =
{
x <- sample(1:36, 24, replace = T)
is.element(1,x)
})
sum(TwoDieTwentyFourRollGame.10Kresults == T)
TwoDieTwentyFourRollGame.10Kresults <- replicate(n=10000, expr =
{
x <- sample(1:36, 24, replace = T)
is.element(1,x)
})
sum(TwoDieTwentyFourRollGame.10Kresults == T)
TwoDieTwentyFourRollGame.10Kresults <- replicate(n=10000, expr =
{
x <- sample(1:36, 24, replace = T)
is.element(1,x)
})
sum(TwoDieTwentyFourRollGame.10Kresults == T)
sample(1:36, 24, replace = T)
sample(1:36, 24, replace = T)
sample(1:36, 24, replace = T)
sample(1:36, 24, replace = T)
sample(1:36, 24, replace = T)
sample(1:36, 24, replace = T)
sample(1:36, 24, replace = T)
sample(1:36, 24, replace = T)
sample(1:36, 24, replace = T)
sample(1:36, 24, replace = T)
TwoDieTwentyFourRollGame.10Kresults <- replicate(n=10000, expr =
{
x <- sample(1:36, 24, replace = T)
is.element(1,x)
})
sum(TwoDieTwentyFourRollGame.10Kresults == T)
SingleDieFourRollGame.10Kresults <- replicate(n=10000, expr =
{
x <- sample(1:6, 4, replace = T)
is.element(1,x)
})
sum(SingleDieFourRollGame.10Kresults == T)
SingleDieFourRollGame.10Kresults <- replicate(n=10000, expr =
{
x <- sample(1:6, 4, replace = T)
is.element(1,x)
})
sum(SingleDieFourRollGame.10Kresults == T)
SingleDieFourRollGame.10Kresults <- replicate(n=10, expr =
{
x <- sample(1:6, 4, replace = T)
is.element(1,x)
})
sum(SingleDieFourRollGame.10Kresults == T)
SingleDieFourRollGame.10Kresults <- replicate(n=10, expr =
{
x <- sample(1:6, 4, replace = T)
is.element(1,x)
})
sum(SingleDieFourRollGame.10Kresults == T)
SingleDieFourRollGame.10Kresults <- replicate(n=10, expr =
{
x <- sample(1:6, 4, replace = T)
is.element(1,x)
})
sum(SingleDieFourRollGame.10Kresults == T)
SingleDieFourRollGame.10Kresults <- replicate(n=10, expr =
{
x <- sample(1:6, 4, replace = T)
is.element(1,x)
})
sum(SingleDieFourRollGame.10Kresults == T)
SingleDieFourRollGame.10Kresults <- replicate(n=10, expr =
{
x <- sample(1:6, 4, replace = T)
is.element(1,x)
})
sum(SingleDieFourRollGame.10Kresults == T)
SingleDieFourRollGame.10Kresults <- replicate(n=10, expr =
{
x <- sample(1:6, 4, replace = T)
is.element(1,x)
})
sum(SingleDieFourRollGame.10Kresults == T)
SingleDieFourRollGame.10Kresults <- replicate(n=10, expr =
{
x <- sample(1:6, 4, replace = T)
is.element(1,x)
})
sum(SingleDieFourRollGame.10Kresults == T)
TwoDieTwentyFourRollGame.10Kresults <- replicate(n=10, expr =
{
x <- sample(1:36, 24, replace = T)
is.element(1,x)
})
sum(TwoDieTwentyFourRollGame.10Kresults == T)
TwoDieTwentyFourRollGame.10Kresults <- replicate(n=10, expr =
{
x <- sample(1:36, 24, replace = T)
is.element(1,x)
})
sum(TwoDieTwentyFourRollGame.10Kresults == T)
TwoDieTwentyFourRollGame.10Kresults <- replicate(n=10, expr =
{
x <- sample(1:36, 24, replace = T)
is.element(1,x)
})
sum(TwoDieTwentyFourRollGame.10Kresults == T)
TwoDieTwentyFourRollGame.10Kresults <- replicate(n=10, expr =
{
x <- sample(1:36, 24, replace = T)
is.element(1,x)
})
TwoDieTwentyFourRollGame.10Kresults <- replicate(n=10, expr =
{
x <- sample(1:36, 24, replace = T)
is.element(1,x)
})
sum(TwoDieTwentyFourRollGame.10Kresults == T)
sum(TwoDieTwentyFourRollGame.10Kresults == T)
TwoDieTwentyFourRollGame.10Kresults <- replicate(n=10, expr =
{
x <- sample(1:36, 24, replace = T)
is.element(1,x)
})
sum(TwoDieTwentyFourRollGame.10Kresults == T)
TwoDieTwentyFourRollGame.10Kresults <- replicate(n=10, expr =
{
x <- sample(1:36, 24, replace = T)
is.element(1,x)
})
sum(TwoDieTwentyFourRollGame.10Kresults == T)
TwoDieTwentyFourRollGame.10Kresults <- replicate(n=10, expr =
{
x <- sample(1:36, 24, replace = T)
is.element(1,x)
})
sum(TwoDieTwentyFourRollGame.10Kresults == T)
TwoDieTwentyFourRollGame.10Kresults <- replicate(n=10, expr =
{
x <- sample(1:36, 24, replace = T)
is.element(1,x)
})
TwoDieTwentyFourRollGame.10Kresults <- replicate(n=10, expr =
{
x <- sample(1:36, 24, replace = T)
is.element(1,x)
})
sum(TwoDieTwentyFourRollGame.10Kresults == T)
TwoDieTwentyFourRollGame.10Kresults <- replicate(n=10, expr =
{
x <- sample(1:36, 24, replace = T)
is.element(1,x)
})
sum(TwoDieTwentyFourRollGame.10Kresults == T)
TwoDieTwentyFourRollGame.10Kresults <- replicate(n=10, expr =
{
x <- sample(1:36, 24, replace = T)
is.element(1,x)
})
sum(TwoDieTwentyFourRollGame.10Kresults == T)
TwoDieTwentyFourRollGame.10Kresults <- replicate(n=10, expr =
{
x <- sample(1:36, 24, replace = T)
is.element(1,x)
})
sum(TwoDieTwentyFourRollGame.10Kresults == T)
TwoDieTwentyFourRollGame.10Kresults <- replicate(n=10, expr =
{
x <- sample(1:36, 24, replace = T)
is.element(1,x)
})
sum(TwoDieTwentyFourRollGame.10Kresults == T)
TwoDieTwentyFourRollGame.10Kresults <- replicate(n=10, expr =
{
x <- sample(1:36, 24, replace = T)
is.element(1,x)
})
sum(TwoDieTwentyFourRollGame.10Kresults == T)
TwoDieTwentyFourRollGame.10Kresults <- replicate(n=10, expr =
{
x <- sample(1:36, 24, replace = T)
is.element(1,x)
})
sum(TwoDieTwentyFourRollGame.10Kresults == T)
TwoDieTwentyFourRollGame.10Kresults <- replicate(n=10, expr =
{
x <- sample(1:36, 24, replace = T)
is.element(1,x)
})
sum(TwoDieTwentyFourRollGame.10Kresults == T)
TwoDieTwentyFourRollGame.10Kresults <- replicate(n=10, expr =
{
x <- sample(1:36, 24, replace = T)
is.element(1,x)
})
sum(TwoDieTwentyFourRollGame.10Kresults == T)
TwoDieTwentyFourRollGame.10Kresults <- replicate(n=10, expr =
{
x <- sample(1:36, 24, replace = T)
is.element(1,x)
})
sum(TwoDieTwentyFourRollGame.10Kresults == T)
x <- sample(1:36, 24, replace = T)
is.element(1,x)
x <- sample(1:36, 24, replace = T)
is.element(1,x)
x <- sample(1:36, 24, replace = T)
is.element(1,x)
x <- sample(1:36, 24, replace = T)
is.element(1,x)
x <- sample(1:36, 24, replace = T)
is.element(1,x)
x <- sample(1:36, 24, replace = T)
is.element(1,x)
x <- sample(1:36, 24, replace = T)
is.element(1,x)
x <- sample(1:36, 24, replace = T)
is.element(1,x)
x <- sample(1:36, 24, replace = T)
is.element(1,x)
x <- sample(1:36, 24, replace = T)
is.element(1,x)
TwoDieTwentyFourRollGame.10Kresults <- replicate(n=10000, expr =
{
x <- sample(1:36, 24, replace = T)
is.element(1,x)
})
is.element(1,x)
sum(TwoDieTwentyFourRollGame.10Kresults == T)
sum(TwoDieTwentyFourRollGame.10Kresults == T)
SingleDieFourRollGame.10Kresults <- replicate(n=10, expr =
{
x <- sample(1:6, 4, replace = T)
is.element(1,x)
})
sum(SingleDieFourRollGame.10Kresults == T)
SingleDieFourRollGame.10Kresults <- replicate(n=10000, expr =
{
x <- sample(1:6, 4, replace = T)
is.element(1,x)
})
sum(SingleDieFourRollGame.10Kresults == T)
?distributions
x <- rnorm(20)
mean(x)
sd(x)
hist(x)
pnorm(10,10,2)
pnorm(1.3, -1, 1, lower.tail = F)
1-pnorm(1.3, -1, 1)
pnorm(-2,1,1)+ 1 - pnorm(2,1,1)
pnorm(4,0,3)*(1-pnorm(2,0,3))
pnorm(4,0,3)
1-pnorm(2,0,3)
0.9087888*0.2524925
qnorm(0.5,-3,2)
qnorm(0.5,-3,2,lower.tail = F)
qnorm(0.05,0,0.3,lower.tail = F)
qnorm(0.025)
set.seed(1121)
x <- rnorm(20)
x
set.seed(1121)
x <- rnorm(20)
mean(x)
sd(x)
hist(x)
x <- 5
is.logical(x)
is.character(x)
is.na(x)
mode(x)
is.numeric(x)
x <- c(1,2,4,8)
x
is.numeric(x)
is.vector(x)
is.vector(5.5)
y <- 10:20
y
c(x,y)
x <- c(1,2,3,"hello","world")
x
y^2
mean(x)
mean(y)
x
x[c(F,T)]
LETTERS
names(y) <- LETTERS[1:length(y)]
y
?names
y <- sort(y)
y
?seq()
seq(2,4,6,8)
c(2,4,6,8)
seq(2,8,2)
2*1:4
sqrt(c(4,16,36,64))
1+0:3
1+1:4
1+seq(1,7,2)
x <- c(52,16,180,1,199,8,3,23,156,63,80,25,5,554,85,1,64,52,7,192)
?rep()
y <- rep(x)
y
x <- c(52,16,180,1,199,8,3,23,156,63,808,25,5,554,85,1,64,52,7,192)
y <- rep(x)
y
?any()
?all()
all(y==x)
?rep()
y <- rep(1,2)
y
x <- c(52,16,180,1,199,8,3,23,156,63,808,25,5,554,85,1,64,52,7,192)
rep(sort(x,decreasing=FALSE))
rep(sort(x))
sort(x)
y <- c(rep(1,2),rep(52,2),3,7,8,23,25,5,63,64,16,85,156,180,192,199,554,808)
y
all(y==x)
x
y
x ==y
setwd("D:/research/hm_tree/metrics/5node")
ptm <- proc.time()
library(data.tree)
library(ape)
library(phytools)
make_matrix <- function(v, df){
m <- matrix(0,length(v),length(v))
dimnames(m) <- list(v,v)
for (i in 1:ncol(m)){
for (j in 1:nrow(m)){
m[i,j] <- dist(rbind(df[,v[i]],df[,v[j]]))
}
}
m
}
score <- function(tree, matrix){
total <- 0
z <- tree$Get("path")
for (i in 2:length(z)){
x <- z[[i]][length(z[[i]])-1]
y <- z[[i]][length(z[[i]])]
total <- total + m[x,y]
}
total
}
df <- read.table("5node_data.csv", header = TRUE,sep = ",")
v <- c("MPP","CMP","GMP","MEP","EryA")
m <- make_matrix(v, df)
trees <- read.newick(file = "trees.tre")
trees <- unique(trees)
trees <- lapply(trees, as.Node)
scores <- lapply(trees, score)
best_tree <- trees[[which.min(scores)]]
plot(best_tree)
proc.time()-ptm
m
njtree <- nj(m)
plot(njtree)
mode(njtree)
plot(njtree,"u")
?plot
?plot.phylo
?nj
ptm <- proc.time()
library(data.tree)
library(ape)
library(phytools)
make_matrix <- function(v, df){
m <- matrix(0,length(v),length(v))
dimnames(m) <- list(v,v)
for (i in 1:ncol(m)){
for (j in 1:nrow(m)){
m[i,j] <- 1 - cor(df[,v[i]], df[,v[j]], method="spearman")
}
}
m
}
score <- function(tree, matrix){
total <- 0
z <- tree$Get("path")
for (i in 2:length(z)){
x <- z[[i]][length(z[[i]])-1]
y <- z[[i]][length(z[[i]])]
total <- total + m[x,y]
}
total
}
df <- read.table("5node_data.csv", header = TRUE,sep = ",")
v <- c("MPP","CMP","GMP","MEP","EryA")
m <- make_matrix(v, df)
trees <- read.newick(file = "trees.tre")
trees <- unique(trees)
trees <- lapply(trees, as.Node)
scores <- lapply(trees, score)
best_tree <- trees[[which.min(scores)]]
plot(best_tree)
njtree <- nj(m)
plot(njtree,"u")
proc.time()-ptm
njtree <- nj(m)
plot(njtree,"u")
plot(njtree)
plot(njtree)
plot(njtree,'d')
plot(njtree,'f')
plot(njtree,'c')
plot(njtree,'u')
make_matrix <- function(v, df){
m <- matrix(0,length(v),length(v))
dimnames(m) <- list(v,v)
for (i in 1:ncol(m)){
for (j in 1:nrow(m)){
m[i,j] <- dist(rbind(df[,v[i]],df[,v[j]]))
}
}
m
}
v <- c("MPP","CMP","GMP","MEP","EryA")
m <- make_matrix(v, df)
m
make_matrix <- function(v, df){
m <- matrix(0,length(v),length(v))
dimnames(m) <- list(v,v)
for (i in 1:ncol(m)){
for (j in 1:nrow(m)){
m[i,j] <- dist(rbind(df[,v[i]],df[,v[j]]))
}
}
m
}
v <- c("MPP","CMP","GMP","MEP","EryA","Gn")
m <- make_matrix(v, df)
df <- read.table("6node_data.csv", header = TRUE,sep = ",")
setwd("D:/research/hm_tree/metrics/6node")
df <- read.table("6node_data.csv", header = TRUE,sep = ",")
v <- c("MPP","CMP","GMP","MEP","EryA","Gn")
m <- make_matrix(v, df)
m
njtree <- nj(m)
plot(njtree,'u')
make_matrix <- function(v, df){
m <- matrix(0,length(v),length(v))
dimnames(m) <- list(v,v)
for (i in 1:ncol(m)){
for (j in 1:nrow(m)){
m[i,j] <- 1 - cor(df[,v[i]], df[,v[j]], method="pearson")
}
}
m
}
v <- c("MPP","CMP","GMP","MEP","EryA","Gn")
m <- make_matrix(v, df)
njtree <- nj(m)
plot(njtree,'u')
m
plot(njtree,'c')
plot(njtree)
