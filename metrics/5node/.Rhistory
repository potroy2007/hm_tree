c(x,y)
x <- c(1,2,3,"hello","world")
x
y^2
mean(x)
mean(y)
x
x[c(F,T)]
LETTERS
names(y) <- LETTERS[1:length(y)]
y
?names
y <- sort(y)
y
?seq()
seq(2,4,6,8)
c(2,4,6,8)
seq(2,8,2)
2*1:4
sqrt(c(4,16,36,64))
1+0:3
1+1:4
1+seq(1,7,2)
x <- c(52,16,180,1,199,8,3,23,156,63,80,25,5,554,85,1,64,52,7,192)
?rep()
y <- rep(x)
y
x <- c(52,16,180,1,199,8,3,23,156,63,808,25,5,554,85,1,64,52,7,192)
y <- rep(x)
y
?any()
?all()
all(y==x)
?rep()
y <- rep(1,2)
y
x <- c(52,16,180,1,199,8,3,23,156,63,808,25,5,554,85,1,64,52,7,192)
rep(sort(x,decreasing=FALSE))
rep(sort(x))
sort(x)
y <- c(rep(1,2),rep(52,2),3,7,8,23,25,5,63,64,16,85,156,180,192,199,554,808)
y
all(y==x)
x
y
x ==y
?pnorm
1- 2*pnorm(3.75,4,2/sqrt(100))
2*pnorm(3.75,4,2/sqrt(100))
2*pnorm(3,4,2/sqrt(100))
round(2*pnorm(3,4,2/sqrt(100)), digits = 10)
round(2*pnorm(3,4,2/sqrt(100)), digits = 2)
pnorm(8,4,2/sqrt(100),lower.tail = F)
1.96*1.5/sqrt(n) <- 0.5
1.96*1.5
2.94*2
5.88**2
1.2/(2.3/sqrt(15))
pt(2.020687,14)
pt(2.020687,14,lower.tail = F)
pt(-2.020687,14,lower.tail = F)
2*pt(2.020687,14,lower.tail = F)
2*pt(2.020687,15,lower.tail = F)
2*pt(2.020687,30,lower.tail = F)
2*pt(2.020687,35,lower.tail = F)
2*pt(2.020687,40,lower.tail = F)
2*pt(2.020687,43,lower.tail = F)
2*pt(2.020687,42,lower.tail = F)
2*pt(2.020687,41,lower.tail = F)
n <- 17
t <- (1.2-0)/(2.3/sqrt(n))
2*pt(t,n-1)
t
n <- 17
t <- (1.2-0)/(2.3/sqrt(n))
2*pt(t,n-1,lower.tail = F)
n <- 16
t <- (1.2-0)/(2.3/sqrt(n))
2*pt(t,n-1,lower.tail = F)
n <- 15
t <- (1.2-0)/(2.3/sqrt(n))
2*pt(t,n-1,lower.tail = F)
n <- 16
t <- (1.2-0)/(2.3/sqrt(n))
2*pt(t,n-1,lower.tail = F)
n <- 17
t <- (1.2-0)/(2.3/sqrt(n))
2*pt(t,n-1,lower.tail = F)
n <- 15
t <- (1.2-0)/(2.3/sqrt(n))
pt(t,n-1,lower.tail = F)
n <- 13
t <- (1.2-0)/(2.3/sqrt(n))
pt(t,n-1,lower.tail = F)
n <- 12
t <- (1.2-0)/(2.3/sqrt(n))
pt(t,n-1,lower.tail = F)
n <- 11
t <- (1.2-0)/(2.3/sqrt(n))
pt(t,n-1,lower.tail = F)
n <- 17
t <- (1.2-0)/(2.3/sqrt(n))
2*pt(t,n-1,lower.tail = F)
t.conf.int <- function(x, CI = 0.95){
xbar <- mean(x)
n <- length(x)
t.quantile <- qt(1-(1-CI)/2, df=n-1)
std.err <- sd(x)/sqrt(n)
conf.int <- c(xbar-t.quantile*std.err, xbar+t.quantile*std.err)
return(conf.int)
}
one.sided.t.test <- function(x,mu=0,lower.tail=T){
xbar <- mean(x)
n <- length(x)
sampSD <- sd(x)
tStatistic <- (xbar-mu)/(sampSD/sqrt(n))
p.value <- pt(tStatistic, df=n-1, lower.tail = lower.tail)
return(p.value)
}
t.conf.int(x)
x <- (0,1,NA)
t.conf.int(x)
x <- (0,1,NA)
x <- c(0,1,NA)
t.conf.int(x)
x <- c(0,1)
t.conf.int(x)
x <- c(0,1,1,1,1,1,1)
t.conf.int(x)
x <- c(1,1,1,1,1,1)
t.conf.int(x)
x <- c(1,0,NA)
t.conf.int(x)
one.sided.t.test(x)
t.conf.int <- function(x, CI = 0.95){
na.omit(x)
xbar <- mean(x)
n <- length(x)
t.quantile <- qt(1-(1-CI)/2, df=n-1)
std.err <- sd(x)/sqrt(n)
conf.int <- c(xbar-t.quantile*std.err, xbar+t.quantile*std.err)
return(conf.int)
}
t.conf.int(x)
t.conf.int <- function(x, CI = 0.95){
x <- na.omit(x)
xbar <- mean(x)
n <- length(x)
t.quantile <- qt(1-(1-CI)/2, df=n-1)
std.err <- sd(x)/sqrt(n)
conf.int <- c(xbar-t.quantile*std.err, xbar+t.quantile*std.err)
return(conf.int)
}
t.conf.int(x)
one.sided.t.test <- function(x,mu=0,lower.tail=T){
x <- na.omit(x)
xbar <- mean(x)
n <- length(x)
sampSD <- sd(x)
tStatistic <- (xbar-mu)/(sampSD/sqrt(n))
p.value <- pt(tStatistic, df=n-1, lower.tail = lower.tail)
return(p.value)
}
x <- c(1,0,NA)
t.conf.int(x)
one.sided.t.test(x)
x <- c(-1,0,NA)
t.conf.int(x)
one.sided.t.test(x)
t.conf.int <- function(x, CI = 0.95){
x <- na.omit(x)
xbar <- mean(x)
n <- length(x)
t.quantile <- qt(1-(1-CI)/2, df=n-1)
std.err <- sd(x)/sqrt(n)
conf.int <- c(xbar-t.quantile*std.err, xbar+t.quantile*std.err)
return(conf.int)
}
one.sided.t.test <- function(x,mu=0,lower.tail=T){
x <- na.omit(x)
xbar <- mean(x)
n <- length(x)
sampSD <- sd(x)
tStatistic <- (xbar-mu)/(sampSD/sqrt(n))
p.value <- pt(tStatistic, df=n-1, lower.tail = lower.tail)
return(p.value)
}
x <- c(-1,0,NA)
t.conf.int(x)
one.sided.t.test(x)
testData <- c(-3,rep(-2,5),rep(-1,10),rep(1,10),rep(1,5),2)
testData
testData <- c(-3,rep(-2,5),rep(-1,10),rep(0,10),rep(1,5),2)
testData
two_tail_t_test(testData)
two_tail_t_test <- function(x,mu=0){
x <- na.omit(x)
xbar <- mean(x)
n <- length(x)
sampSD <- sd(x)
tStatistic <- (xbar-mu)/(sampSD/sqrt(n))
p.value <- 2*pt(tStatistic, df=n-1, lower.tail = F)
return(p.value)
}
testData <- c(-3,rep(-2,5),rep(-1,10),rep(0,10),rep(1,5),2)
two_tail_t_test(testData)
?abs
mean(testData)
two_tail_t_test <- function(x,mu=0){
x <- na.omit(x)
xbar <- abs(mean(x))
n <- length(x)
sampSD <- sd(x)
tStatistic <- (xbar-mu)/(sampSD/sqrt(n))
p.value <- 2*pt(tStatistic, df=n-1, lower.tail = F)
return(p.value)
}
testData <- c(-3,rep(-2,5),rep(-1,10),rep(0,10),rep(1,5),2)
two_tail_t_test(testData)
?t.test
t.test(myData,alternative="two.sided",mu=0)
?rnorm
sample <- rnorm(20,3,2)
myData <- rnorm(20,3,2)
t.test(myData,alternative="two.sided",mu=0)
t.test(myData,alternative="less",mu=5)
two_tail_t_test(myData)
one.sided.t.test(myData,mu=0)
one.sided.t.test(myData,lower.tail = F)
one.sided.t.test(myData,mu=5,lower.tail = F)
one.sided.t.test(myData,mu=5,lower.tail = T)
one.sided.t.test(myData,lower.tail = F)
t.test(myData,alternative="greater",mu=0)
t.test(myData,mu=0)
mean(myData)
two_tail_t_test(testData)
Strain1 <- c(42.6,57.89,45.22,45.4,40.01,48.64,48.42,46.86,49.47,52.14,46.11,43.53)
Strain2 <- c(46.2,54.12,52.48,46.97,65.89,57.41,59.07,51.07,56.24)
2**2
Strain1 <- c(42.6,57.89,45.22,45.4,40.01,48.64,48.42,46.86,49.47,52.14,46.11,43.53)
Strain2 <- c(46.2,54.12,52.48,46.97,65.89,57.41,59.07,51.07,56.24)
mean_diff <- mean(Strain2)-mean(Strain1)
mean_stderr <- sqrt(sd(Strain2)**2/length(Strain2)+sd(Strain1)**2/length(Strain1))
t_stat <- mean_diff/mean_stderr
t_stat
?df
Strain1 <- c(42.6,57.89,45.22,45.4,40.01,48.64,48.42,46.86,49.47,52.14,46.11,43.53)
Strain2 <- c(46.2,54.12,52.48,46.97,65.89,57.41,59.07,51.07,56.24)
mean_diff <- mean(Strain2)-mean(Strain1)
mean_stderr <- sqrt(sd(Strain2)**2/length(Strain2)+sd(Strain1)**2/length(Strain1))
t_stat <- mean_diff/mean_stderr
t_stat
n1 <- length(Strain1)
n2 <- length(Strain2)
SE_1 <- sd(Strain1)/sqrt(n1)
SE_2 <- sd(Strain2)/sqrt(n2))
df_paired <- (SE_2**2+SE_1**2)**2/((SE_2)**4/(n2-1)+(SE_1)**4/(n1-1))
pt(t_stat,df)
Strain1 <- c(42.6,57.89,45.22,45.4,40.01,48.64,48.42,46.86,49.47,52.14,46.11,43.53)
Strain2 <- c(46.2,54.12,52.48,46.97,65.89,57.41,59.07,51.07,56.24)
mean_diff <- mean(Strain2)-mean(Strain1)
mean_stderr <- sqrt(sd(Strain2)**2/length(Strain2)+sd(Strain1)**2/length(Strain1))
t_stat <- mean_diff/mean_stderr
t_stat
n1 <- length(Strain1)
n2 <- length(Strain2)
SE_1 <- sd(Strain1)/sqrt(n1)
SE_2 <- sd(Strain2)/sqrt(n2)
df_paired <- (SE_2**2+SE_1**2)**2/((SE_2)**4/(n2-1)+(SE_1)**4/(n1-1))
pt(t_stat,df_paired)
2*pt(t_stat,df_paired,lower.tail = F)
t.test?
?
?t.test
t.test(Strain1,Strain2)
pt(t_stat,df_paired,lower.tail = F)
pt(-t_stat,df_paired,lower.tail = T)
t.test(Strain1,Strain2,"less")
t.test(Strain1,Strain2,"greater")
pt(t_stat,df_paired,lower.tail = T)
mean_diff <- mean(Strain1)-mean(Strain2)
mean_stderr <- sqrt(sd(Strain2)**2/length(Strain2)+sd(Strain1)**2/length(Strain1))
t_stat <- mean_diff/mean_stderr
t_stat
n1 <- length(Strain1)
n2 <- length(Strain2)
SE_1 <- sd(Strain1)/sqrt(n1)
SE_2 <- sd(Strain2)/sqrt(n2)
df_paired <- (SE_2**2+SE_1**2)**2/((SE_2)**4/(n2-1)+(SE_1)**4/(n1-1))
2*pt(t_stat,df_paired,lower.tail = F)
2*pt(t_stat,df_paired,lower.tail = T)
pt(t_stat,df_paired,lower.tail = F)
pt(t_stat,df_paired,lower.tail = T)
t.test(Strain1,Strain2)
t.test(Strain1,Strain2,"less")
t.test(Strain1,Strain2,"greater")
t.test(Strain1,Strain2,"greater")
cell_types <- c("MPP","CMP","GMP","MEP","EryA")
edges <- c(0,1,0,0,0,1,0,1,1,0,0,1,0,0,0,0,1,0,0,1,0,0,0,1,0)
length(edges)
?matrix
adj_matrix <- matrix(edges,length(cell_types),length(cell_types),byrow = T,dimnames = list(edges,edges)
adj_matrix <- matrix(edges,length(cell_types),length(cell_types),byrow = T,dimnames = list(edges,edges))
adj_matrix <- matrix(edges,length(cell_types),length(cell_types),byrow = T,dimnames =edges)
adj_matrix <- matrix(edges,length(cell_types),length(cell_types),byrow = T)
adj_matrix
dimnames(adj_matrix) <- list(cell_types,cell_types)
adj_matrix
?install_package
install.packages("igraph")
library(igraph)
graph.adjacency(adj_matrix)
tree <- graph.adjacency(adj_matrix)
tree
plot(tree)
edges <- c(0,1,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0)
adj_matrix <- matrix(edges,length(cell_types),length(cell_types),byrow = T)
dimnames(adj_matrix) <- list(cell_types,cell_types)
tree <- graph.adjacency(adj_matrix)
plot(tree)
library(data.tree)
tree2 <- as.Node(tree)
tree2 <- layout_as_tree(tree,root = MPP)
plot(tree)
tree2 <- layout_as_tree(tree,root = "MPP")
plot(tree)
plot(tree2)
tree2 <- layout_as_tree(tree,root = "MPP")
View(tree2)
tree2
tree2 <-as.phylo(tree)
library(ape)
tree2 <-as.phylo(tree)
tree2 <-asPhylo(tree)
tree2 <-as_data_frame(tree)
View(tree2)
make_tree(5,2)
plot(make_tree(5,2))
plot(tree)
tree
tree2 <- as_tree(tree)
plot(tree2)
tree
tree2
tree2 <- as_tree(tree,1)
tree2
plot(tree2)
plot(tree)
plot(tree)
plot(tree)
tkplot(tree)
tkplot(tree)
plot.igraph(tree)
plot.igraph(tree)
tree$edges
get.edges(tree)
get.edgelist(tree)
get.adjacency()
get.adjacency(tree)
get.adjacencylist(tree)
get.adjedgelist(tree)
get.adjlist(tree)
trees <- read.graph('trees.tre')
trees <- read.graph('trees.tre',format="newick")
z <- get.edgelist(tree)
z
z$nrow
nrow(z)
z[i,1]
z[1,1]
library(igraph)
cell_types <- c("MPP","CMP","GMP","MEP","EryA")
edges <- c(0,1,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0)
adj_matrix <- matrix(edges,length(cell_types),length(cell_types),byrow = T)
dimnames(adj_matrix) <- list(cell_types,cell_types)
tree <- graph.adjacency(adj_matrix)
make_matrix <- function(v, df){
m <- matrix(0,length(v),length(v))
dimnames(m) <- list(v,v)
for (i in 1:ncol(m)){
for (j in 1:nrow(m)){
m[i,j] <- round(1-cor(df[,v[i]], df[,v[j]], method="pearson"),digit = 2)
}
}
m
}
score <- function(tree){
total <- 0
z <- get.edgelist(tree)
for (i in 1:nrow(z){
x <- z[i,1]
y <- z[i,2]
total <- total + m[x,y]
}
total
}
df <- read.table("5node_data.csv", header = TRUE,sep = ",")
v <- c("MPP","CMP","GMP","MEP","EryA")
m <- make_matrix(v, df)
s <- score(tree)
setwd("D:/research/hm_tree/metrics/5node")
library(igraph)
cell_types <- c("MPP","CMP","GMP","MEP","EryA")
edges <- c(0,1,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0)
adj_matrix <- matrix(edges,length(cell_types),length(cell_types),byrow = T)
dimnames(adj_matrix) <- list(cell_types,cell_types)
tree <- graph.adjacency(adj_matrix)
make_matrix <- function(v, df){
m <- matrix(0,length(v),length(v))
dimnames(m) <- list(v,v)
for (i in 1:ncol(m)){
for (j in 1:nrow(m)){
m[i,j] <- round(1-cor(df[,v[i]], df[,v[j]], method="pearson"),digit = 2)
}
}
m
}
score <- function(tree){
total <- 0
z <- get.edgelist(tree)
for (i in 1:nrow(z){
x <- z[i,1]
y <- z[i,2]
total <- total + m[x,y]
}
total
}
df <- read.table("5node_data.csv", header = TRUE,sep = ",")
v <- c("MPP","CMP","GMP","MEP","EryA")
m <- make_matrix(v, df)
s <- score(tree)
score <- function(tree){
total <- 0
z <- get.edgelist(tree)
for (i in 1:nrow(z)){
x <- z[i,1]
y <- z[i,2]
total <- total + m[x,y]
}
total
}
df <- read.table("5node_data.csv", header = TRUE,sep = ",")
v <- c("MPP","CMP","GMP","MEP","EryA")
m <- make_matrix(v, df)
s <- score(tree)
s
ptm <- proc.time()
library(data.tree)
library(ape)
library(phytools)
make_matrix <- function(v, df){
m <- matrix(0,length(v),length(v))
dimnames(m) <- list(v,v)
for (i in 1:ncol(m)){
for (j in 1:nrow(m)){
m[i,j] <- round(1-cor(df[,v[i]], df[,v[j]], method="pearson"),digit = 2)
}
}
m
}
score <- function(tree, matrix){
total <- 0
z <- tree$Get("path")
for (i in 2:length(z)){
x <- z[[i]][length(z[[i]])-1]
y <- z[[i]][length(z[[i]])]
total <- total + m[x,y]
}
pair <- c(total,tree)
pair
}
df <- read.table("5node_data.csv", header = TRUE,sep = ",")
v <- c("MPP","CMP","GMP","MEP","EryA")
m <- make_matrix(v, df)
trees <- read.newick(file = "trees.tre")
trees <- lapply(trees, as.Node)
pairs <- lapply(trees, score)
pairs <- pairs[order(sapply(pairs, function(x) x[[1]]))]
lapply(pairs[1:5], function(x) x[[2]])
proc.time()-ptm
pairs[[1]][[1]]
library(igraph)
cell_types <- c("MPP","CMP","GMP","MEP","EryA")
edges <- c(0,1,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0)
adj_matrix <- matrix(edges,length(cell_types),length(cell_types),byrow = T)
dimnames(adj_matrix) <- list(cell_types,cell_types)
tree <- graph.adjacency(adj_matrix)
make_matrix <- function(v, df){
m <- matrix(0,length(v),length(v))
dimnames(m) <- list(v,v)
for (i in 1:ncol(m)){
for (j in 1:nrow(m)){
m[i,j] <- round(1-cor(df[,v[i]], df[,v[j]], method="pearson"),digit = 2)
}
}
m
}
score <- function(tree){
total <- 0
z <- get.edgelist(tree)
for (i in 1:nrow(z)){
x <- z[i,1]
y <- z[i,2]
total <- total + m[x,y]
}
total
}
df <- read.table("5node_data.csv", header = TRUE,sep = ",")
v <- c("MPP","CMP","GMP","MEP","EryA")
m <- make_matrix(v, df)
s <- score(tree)
plot.igraph(tree)
